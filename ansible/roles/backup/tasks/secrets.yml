# 1) локальная папка под restic-пароли на контроллере
- name: Ensure local secrets dir exists (on controller)
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.ansible/secrets/restic"
    state: directory
    mode: "0700"

# 2) restic password: возьмём из Vault/vars, а если не задан — сгенерим/прочитаем из файла на контроллере
- name: Set restic password from local file (generate if missing)
  when: backup_restic_password is not defined or backup_restic_password in [None, ""]
  no_log: true
  ansible.builtin.set_fact:
    backup_restic_password: >-
      {{ lookup(
           'password',
           lookup('env','HOME') ~ '/.ansible/secrets/restic/shm length=48 chars=ascii_letters,digits'
         ) }}

# 3) AWS creds для S3/MinIO: если явно не задали, но указан backup_minio_user — читаем тот же секрет из вашей роли minio
- name: Set AWS access key from minio user (if missing)
  when: (backup_aws_access_key_id is not defined or backup_aws_access_key_id in [None, ""]) and (backup_minio_user | length > 0)
  no_log: true
  ansible.builtin.set_fact:
    backup_aws_access_key_id: "{{ backup_minio_user }}"

- name: Set AWS secret key from minio_user secret store (if missing)
  when: (backup_aws_secret_access_key is not defined or backup_aws_secret_access_key in [None, ""]) and (backup_minio_user | length > 0)
  no_log: true
  ansible.builtin.set_fact:
    backup_aws_secret_access_key: >-
      {{ lookup(
           'password',
           (minio_secret_store | default(lookup('env','HOME') ~ '/.ansible/secrets/minio'))
           ~ '/' ~ backup_minio_user
           ~ ' length=' ~ (minio_secret_length | default(40) | string)
           ~ ' chars='  ~ (minio_secret_chars  | default('ascii_letters,digits'))
         ) }}

# 4) sanity-check перед рендером env
- name: Assert credentials present for S3 repository
  when: backup_restic_repository is search('^s3:')
  ansible.builtin.assert:
    that:
      - backup_aws_access_key_id is defined and backup_aws_access_key_id|length > 0
      - backup_aws_secret_access_key is defined and backup_aws_secret_access_key|length > 0
      - backup_restic_password is defined and backup_restic_password|length > 0
    fail_msg: "S3 repo is configured but AWS creds/restic password are missing."
